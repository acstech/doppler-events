version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:4.1.1
    hostname: zookeeper
    ports:
      - "2181:2181" # Client connections
      - "2888:2888" # Communication between zookeeper instances with each other
      - "3888:3888" # Communication between zookeeper instances with the leader
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./data/zookeeper:/var/lib/zookeeper/data

  kafka:
    image: confluentinc/cp-kafka:4.1.1
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
    - "9092:9092" # Connection port
    env_file:
      - kafka.env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka:/var/lib/kafka/data

  schema_registry:
    image: confluentinc/cp-schema-registry:4.1.1
    hostname: schema_registry
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8081:8081" # Connection port
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema_registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

  influx_db:
    hostname: influx_db
    image: influxdb:1.4.3
    ports:
      - "8086:8086" # Connection port
    environment:
      INFLUXDB_DB: doppler
    volumes:
      - ./data/influx:/var/lib/influxdb
      - ./data/influxStartup:/docker-entrypoint-initdb.d

  couchbase:
    hostname: couchbase
    image: couchbase:5.1.1
    ports:
    - "8091:8091"   # Couchbase Web console, REST/HTTP interface
    - "8092:8092"   # Views, queries, XDCR
    - "8093:8093"   # Query services (4.0+)
    - "8094:8094"   # Full-text Search (4.5+)
    - "11207:11207" # Smart client library data node access (SSL)
    - "11210:11210" # Smart client library/moxi data node access
    - "11211:11211" # Legacy non-smart client library data node access
    - "18091:18091" # Couchbase Web console, REST/HTTP interface (SSL)
    - "18092:18092" # Views, query, XDCR (SSL)
    - "18093:18093" # Query services (SSL) (4.0+)
    - "18094:18094" # Full-text Search (SSL) (4.5+)
    volumes:
      - ./data/couchbase:/opt/couchbase/var

  kafka_connect:
    image: datamountaineer/kafka-connect-influxdb:1.1.0
    hostname: kafka_connect
    depends_on:
      - zookeeper
      - kafka
      - influx_db
      - schema_registry
    ports:
     - "8083:8083" # Rest API
     - "9093:9092" # Producer connection
     - "9102:9102"
    env_file:
      - influx.env
    environment:
      # kafka connect
      CONNECT_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka_connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_SCHEMA_REGISTRY_URL: 'http://schema_registry:8081'
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_PLUGIN_PATH: /usr/share/java
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper:ERROR,org.I0Itec.zkclient:ERROR,org.reflections:ERROR
      # Sink Connector for Influx
      CONNECTOR_NAME: "InfluxSink"
      CONNECTOR_CONNECTOR_CLASS: "com.datamountaineer.streamreactor.connect.influx.InfluxSinkConnector"
      CONNECTOR_TASKS_MAX: 1
      CONNECTOR_CONNECT_INFLUX_URL: "http://influx_db:8086"
      CONNECTOR_CONNECT_INFLUX_DB: "doppler"
      CONNECTOR_CONNECT_INFLUX_RETENTION_POLICY: "sixMonths"

  doppler-events:
    image: acst/doppler-events:latest
    hostname: doppler_events
    depends_on:
      - kafka
      - couchbase
    ports:
     - "8080:8080" # same as port specified in the environment variable
    env_file:
      - doppler-base.env
      - doppler-events.env

  doppler-api:
    image: acst/doppler-api:latest
    hostname: doppler_api
    depends_on:
      - kafka
      - couchbase
    ports:
    - "8000:8000" # same as port specified in the environment variable
    env_file:
      - doppler-base.env
  
  frontend:
    image: acst/doppler-frontend:latest
    hostname: frontend
    ports: 
    - "9080:80"