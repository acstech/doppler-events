// Code generated by protoc-gen-go. DO NOT EDIT.
// source: EventClient.proto

package EventClient

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EventObj struct {
	// unique ID for client
	ClientID string `protobuf:"bytes,1,opt,name=clientID,proto3" json:"clientID,omitempty"`
	// to specify what type of event they are sending
	EventID string `protobuf:"bytes,2,opt,name=eventID,proto3" json:"eventID,omitempty"`
	// time value
	TimeSinceEpoch uint64 `protobuf:"varint,3,opt,name=timeSinceEpoch,proto3" json:"timeSinceEpoch,omitempty"`
	// all data and any other sort of tags
	KeyValues            map[string]string `protobuf:"bytes,4,rep,name=keyValues,proto3" json:"keyValues,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EventObj) Reset()         { *m = EventObj{} }
func (m *EventObj) String() string { return proto.CompactTextString(m) }
func (*EventObj) ProtoMessage()    {}
func (*EventObj) Descriptor() ([]byte, []int) {
	return fileDescriptor_EventClient_eb2f3cc86fd2d51c, []int{0}
}
func (m *EventObj) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventObj.Unmarshal(m, b)
}
func (m *EventObj) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventObj.Marshal(b, m, deterministic)
}
func (dst *EventObj) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventObj.Merge(dst, src)
}
func (m *EventObj) XXX_Size() int {
	return xxx_messageInfo_EventObj.Size(m)
}
func (m *EventObj) XXX_DiscardUnknown() {
	xxx_messageInfo_EventObj.DiscardUnknown(m)
}

var xxx_messageInfo_EventObj proto.InternalMessageInfo

func (m *EventObj) GetClientID() string {
	if m != nil {
		return m.ClientID
	}
	return ""
}

func (m *EventObj) GetEventID() string {
	if m != nil {
		return m.EventID
	}
	return ""
}

func (m *EventObj) GetTimeSinceEpoch() uint64 {
	if m != nil {
		return m.TimeSinceEpoch
	}
	return 0
}

func (m *EventObj) GetKeyValues() map[string]string {
	if m != nil {
		return m.KeyValues
	}
	return nil
}

type EventResp struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventResp) Reset()         { *m = EventResp{} }
func (m *EventResp) String() string { return proto.CompactTextString(m) }
func (*EventResp) ProtoMessage()    {}
func (*EventResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_EventClient_eb2f3cc86fd2d51c, []int{1}
}
func (m *EventResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventResp.Unmarshal(m, b)
}
func (m *EventResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventResp.Marshal(b, m, deterministic)
}
func (dst *EventResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventResp.Merge(dst, src)
}
func (m *EventResp) XXX_Size() int {
	return xxx_messageInfo_EventResp.Size(m)
}
func (m *EventResp) XXX_DiscardUnknown() {
	xxx_messageInfo_EventResp.DiscardUnknown(m)
}

var xxx_messageInfo_EventResp proto.InternalMessageInfo

func (m *EventResp) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func init() {
	proto.RegisterType((*EventObj)(nil), "EventClient.EventObj")
	proto.RegisterMapType((map[string]string)(nil), "EventClient.EventObj.KeyValuesEntry")
	proto.RegisterType((*EventResp)(nil), "EventClient.EventResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventSenderClient is the client API for EventSender service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventSenderClient interface {
	// Sends the event and does not get anything back
	SendEvent(ctx context.Context, in *EventObj, opts ...grpc.CallOption) (*EventResp, error)
}

type eventSenderClient struct {
	cc *grpc.ClientConn
}

func NewEventSenderClient(cc *grpc.ClientConn) EventSenderClient {
	return &eventSenderClient{cc}
}

func (c *eventSenderClient) SendEvent(ctx context.Context, in *EventObj, opts ...grpc.CallOption) (*EventResp, error) {
	out := new(EventResp)
	err := c.cc.Invoke(ctx, "/EventClient.EventSender/SendEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventSenderServer is the server API for EventSender service.
type EventSenderServer interface {
	// Sends the event and does not get anything back
	SendEvent(context.Context, *EventObj) (*EventResp, error)
}

func RegisterEventSenderServer(s *grpc.Server, srv EventSenderServer) {
	s.RegisterService(&_EventSender_serviceDesc, srv)
}

func _EventSender_SendEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventObj)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventSenderServer).SendEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/EventClient.EventSender/SendEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventSenderServer).SendEvent(ctx, req.(*EventObj))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventSender_serviceDesc = grpc.ServiceDesc{
	ServiceName: "EventClient.EventSender",
	HandlerType: (*EventSenderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendEvent",
			Handler:    _EventSender_SendEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "EventClient.proto",
}

func init() { proto.RegisterFile("EventClient.proto", fileDescriptor_EventClient_eb2f3cc86fd2d51c) }

var fileDescriptor_EventClient_eb2f3cc86fd2d51c = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x74, 0x2d, 0x4b, 0xcd,
	0x2b, 0x71, 0xce, 0xc9, 0x4c, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x52, 0x7a, 0xc5, 0xc8, 0xc5, 0x01, 0xe6, 0xfb, 0x27, 0x65, 0x09, 0x49, 0x71, 0x71, 0x24,
	0x83, 0x85, 0x3d, 0x5d, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xe0, 0x7c, 0x21, 0x09, 0x2e,
	0xf6, 0xd4, 0x32, 0x88, 0x14, 0x13, 0x58, 0x0a, 0xc6, 0x15, 0x52, 0xe3, 0xe2, 0x2b, 0xc9, 0xcc,
	0x4d, 0x0d, 0xce, 0xcc, 0x4b, 0x4e, 0x75, 0x2d, 0xc8, 0x4f, 0xce, 0x90, 0x60, 0x56, 0x60, 0xd4,
	0x60, 0x09, 0x42, 0x13, 0x15, 0x72, 0xe2, 0xe2, 0xcc, 0x4e, 0xad, 0x0c, 0x4b, 0xcc, 0x29, 0x4d,
	0x2d, 0x96, 0x60, 0x51, 0x60, 0xd6, 0xe0, 0x36, 0x52, 0xd1, 0x43, 0x76, 0x1e, 0xcc, 0x1d, 0x7a,
	0xde, 0x30, 0x65, 0xae, 0x79, 0x25, 0x45, 0x95, 0x41, 0x08, 0x6d, 0x52, 0x36, 0x5c, 0x7c, 0xa8,
	0x92, 0x42, 0x02, 0x5c, 0xcc, 0xd9, 0xa9, 0x95, 0x50, 0xe7, 0x82, 0x98, 0x42, 0x22, 0x5c, 0xac,
	0x65, 0x20, 0x05, 0x50, 0x77, 0x42, 0x38, 0x56, 0x4c, 0x16, 0x8c, 0x4a, 0xea, 0x5c, 0x9c, 0x60,
	0x3b, 0x82, 0x52, 0x8b, 0x0b, 0x40, 0x9e, 0x2d, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x85,
	0x79, 0x16, 0xc6, 0x37, 0xf2, 0xe6, 0x82, 0x04, 0x52, 0x70, 0x6a, 0x5e, 0x4a, 0x6a, 0x91, 0x90,
	0x0d, 0x17, 0x27, 0x88, 0x05, 0x16, 0x12, 0x12, 0xc5, 0xea, 0x66, 0x29, 0x31, 0x4c, 0x61, 0x90,
	0x35, 0x4a, 0x0c, 0x49, 0x6c, 0xe0, 0x60, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x05,
	0xe7, 0x87, 0x8b, 0x01, 0x00, 0x00,
}
