// Code generated by protoc-gen-go. DO NOT EDIT.
// source: eventAPI.proto

package eventAPI

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Event Receive message format
type DisplayRequest struct {
	// unique ID for client
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// to specify what type of event they are sending
	EventId string `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	// time value (Unix time)
	DateTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	// all data and any other sort of tags
	DataSet              map[string]string `protobuf:"bytes,4,rep,name=data_set,json=dataSet,proto3" json:"data_set,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DisplayRequest) Reset()         { *m = DisplayRequest{} }
func (m *DisplayRequest) String() string { return proto.CompactTextString(m) }
func (*DisplayRequest) ProtoMessage()    {}
func (*DisplayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eventAPI_4f38c8a5314c843c, []int{0}
}
func (m *DisplayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisplayRequest.Unmarshal(m, b)
}
func (m *DisplayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisplayRequest.Marshal(b, m, deterministic)
}
func (dst *DisplayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisplayRequest.Merge(dst, src)
}
func (m *DisplayRequest) XXX_Size() int {
	return xxx_messageInfo_DisplayRequest.Size(m)
}
func (m *DisplayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DisplayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DisplayRequest proto.InternalMessageInfo

func (m *DisplayRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *DisplayRequest) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *DisplayRequest) GetDateTime() *timestamp.Timestamp {
	if m != nil {
		return m.DateTime
	}
	return nil
}

func (m *DisplayRequest) GetDataSet() map[string]string {
	if m != nil {
		return m.DataSet
	}
	return nil
}

// Event Response message format
type DisplayResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DisplayResponse) Reset()         { *m = DisplayResponse{} }
func (m *DisplayResponse) String() string { return proto.CompactTextString(m) }
func (*DisplayResponse) ProtoMessage()    {}
func (*DisplayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eventAPI_4f38c8a5314c843c, []int{1}
}
func (m *DisplayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DisplayResponse.Unmarshal(m, b)
}
func (m *DisplayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DisplayResponse.Marshal(b, m, deterministic)
}
func (dst *DisplayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DisplayResponse.Merge(dst, src)
}
func (m *DisplayResponse) XXX_Size() int {
	return xxx_messageInfo_DisplayResponse.Size(m)
}
func (m *DisplayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DisplayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DisplayResponse proto.InternalMessageInfo

func (m *DisplayResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func init() {
	proto.RegisterType((*DisplayRequest)(nil), "dopplerEvent.DisplayRequest")
	proto.RegisterMapType((map[string]string)(nil), "dopplerEvent.DisplayRequest.DataSetEntry")
	proto.RegisterType((*DisplayResponse)(nil), "dopplerEvent.DisplayResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventAPIClient is the client API for EventAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventAPIClient interface {
	// Sends the event and does not get anything back
	DisplayData(ctx context.Context, in *DisplayRequest, opts ...grpc.CallOption) (*DisplayResponse, error)
}

type eventAPIClient struct {
	cc *grpc.ClientConn
}

func NewEventAPIClient(cc *grpc.ClientConn) EventAPIClient {
	return &eventAPIClient{cc}
}

func (c *eventAPIClient) DisplayData(ctx context.Context, in *DisplayRequest, opts ...grpc.CallOption) (*DisplayResponse, error) {
	out := new(DisplayResponse)
	err := c.cc.Invoke(ctx, "/dopplerEvent.EventAPI/DisplayData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventAPIServer is the server API for EventAPI service.
type EventAPIServer interface {
	// Sends the event and does not get anything back
	DisplayData(context.Context, *DisplayRequest) (*DisplayResponse, error)
}

func RegisterEventAPIServer(s *grpc.Server, srv EventAPIServer) {
	s.RegisterService(&_EventAPI_serviceDesc, srv)
}

func _EventAPI_DisplayData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DisplayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventAPIServer).DisplayData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dopplerEvent.EventAPI/DisplayData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventAPIServer).DisplayData(ctx, req.(*DisplayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dopplerEvent.EventAPI",
	HandlerType: (*EventAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DisplayData",
			Handler:    _EventAPI_DisplayData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "eventAPI.proto",
}

func init() { proto.RegisterFile("eventAPI.proto", fileDescriptor_eventAPI_4f38c8a5314c843c) }

var fileDescriptor_eventAPI_4f38c8a5314c843c = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xb1, 0x4f, 0xf3, 0x30,
	0x10, 0xc5, 0xbf, 0xb4, 0x1f, 0xd4, 0xbd, 0x56, 0x05, 0x59, 0x0c, 0x25, 0x80, 0xa8, 0x3a, 0x95,
	0x01, 0x57, 0x2a, 0x03, 0xa8, 0x1b, 0x28, 0x19, 0x22, 0x31, 0xa0, 0xc0, 0x80, 0x58, 0x22, 0x17,
	0x1f, 0x55, 0x44, 0x1a, 0x9b, 0xd8, 0xa9, 0x94, 0x99, 0x7f, 0x1c, 0x39, 0x4e, 0x50, 0x19, 0x60,
	0xbb, 0x77, 0xef, 0x92, 0xdf, 0xdd, 0x33, 0x8c, 0x70, 0x8b, 0xb9, 0xb9, 0x7d, 0x88, 0x98, 0x2a,
	0xa4, 0x91, 0x74, 0x28, 0xa4, 0x52, 0x19, 0x16, 0xa1, 0x6d, 0xfb, 0xe7, 0x6b, 0x29, 0xd7, 0x19,
	0xce, 0x6b, 0x6f, 0x55, 0xbe, 0xcd, 0x4d, 0xba, 0x41, 0x6d, 0xf8, 0x46, 0xb9, 0xf1, 0xe9, 0x67,
	0x07, 0x46, 0x41, 0xaa, 0x55, 0xc6, 0xab, 0x18, 0x3f, 0x4a, 0xd4, 0x86, 0x9e, 0x40, 0xff, 0x35,
	0x4b, 0x31, 0x37, 0x49, 0x2a, 0xc6, 0xde, 0xc4, 0x9b, 0xf5, 0x63, 0xe2, 0x1a, 0x91, 0xa0, 0xc7,
	0x40, 0x6a, 0xa0, 0xf5, 0x3a, 0xb5, 0xd7, 0xab, 0x75, 0x24, 0xe8, 0x35, 0xf4, 0x05, 0x37, 0x98,
	0x58, 0xc4, 0xb8, 0x3b, 0xf1, 0x66, 0x83, 0x85, 0xcf, 0x1c, 0x9f, 0xb5, 0x7c, 0xf6, 0xd4, 0xf2,
	0x63, 0x62, 0x87, 0xad, 0xa4, 0x01, 0xd8, 0x9a, 0x27, 0x1a, 0xcd, 0xf8, 0xff, 0xa4, 0x3b, 0x1b,
	0x2c, 0x2e, 0xd8, 0xee, 0x15, 0xec, 0xe7, 0x82, 0x2c, 0xe0, 0x86, 0x3f, 0xa2, 0x09, 0x73, 0x53,
	0x54, 0x71, 0x4f, 0x38, 0xe5, 0x2f, 0x61, 0xb8, 0x6b, 0xd0, 0x43, 0xe8, 0xbe, 0x63, 0xd5, 0x1c,
	0x60, 0x4b, 0x7a, 0x04, 0x7b, 0x5b, 0x9e, 0x95, 0xd8, 0x2c, 0xee, 0xc4, 0xb2, 0x73, 0xe3, 0x4d,
	0x2f, 0xe1, 0xe0, 0x9b, 0xa1, 0x95, 0xcc, 0x35, 0x52, 0x1f, 0x48, 0xd1, 0xd4, 0x6d, 0x08, 0xad,
	0x5e, 0x3c, 0x03, 0x09, 0x9b, 0xd4, 0xe9, 0x3d, 0x0c, 0x9a, 0x4f, 0x2d, 0x9d, 0x9e, 0xfe, 0xb5,
	0xb9, 0x7f, 0xf6, 0x8b, 0xeb, 0xfe, 0x3b, 0xfd, 0x77, 0x07, 0x2f, 0xa4, 0x7d, 0xcf, 0xd5, 0x7e,
	0x1d, 0xda, 0xd5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x18, 0xe4, 0xf3, 0xe2, 0x01, 0x00,
	0x00,
}
